@inherits LayoutComponentBase
@using Web_Onboard.Data 
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    @*top status bar that includes the user's name, link to edit their profile, and link to logout*@
    <div class="top-row px-4">
        <div style="float:right; margin-top: .5rem; margin-bottom: 1rem;">
            <AuthorizeView>
                <Authorized>
                    <span>@name</span>
                    <button class="btn btn-primary" @onclick='@(e => ButtonReroute("/editprofile"))'>Edit Profile</button>
                </Authorized>
            </AuthorizeView>
            <button class="btn btn-dark" @onclick='@(e => ButtonReroute("/logout"))'>Logout</button>
        </div>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code{
    //holds the first and last name of the user if stored in the database
    string name = "";

    //initilizes data on page load
    protected override async Task OnInitializedAsync()
    {
        //peice together name
        string first = ((CustomAuthenticationStateProvider)authenticationStateProvider).getFirstName();
        string last = ((CustomAuthenticationStateProvider)authenticationStateProvider).getLastName();
        if (string.IsNullOrWhiteSpace(first) && string.IsNullOrWhiteSpace(last))
        {
            name = "No Name";
        }
        else if (string.IsNullOrWhiteSpace(first) || string.IsNullOrWhiteSpace(last))
        {
            name = (string.IsNullOrWhiteSpace(first)) ? last : first;
        }
        else
        {
            name = first + " " + last;
        }
    }

    //nice function wrapper for rerouting
    private void ButtonReroute(String path)
    {
        navigationManager.NavigateTo(path);
    }
}