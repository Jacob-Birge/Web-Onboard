@using Web_Onboard.Data
@using System.Data
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@page "/usermanager"
@attribute [Authorize(Roles = "Owner, Manager")]

<h3>User Manager</h3>
<button style="float: right; margin-left: auto;" class="btn btn-primary" @onclick="UserAddedButtonToggle">Add Users</button>

<div style="width: 90%; padding: 5%; background-color: #fff; text-align: left;">
    <EditForm Model="@user">
        <DataAnnotationsValidator />
        @if (@errorMessage != "")
        {
            StateHasChanged();
            <div id="errorMessage" class="alert alert-danger">@errorMessage</div>
        }
        
        @if (successMsg != "")
        {
            <div id="errorMessage" class="alert alert-success">@successMsg</div>
        }
        @if (isAndy)
        {
            <h3>Hi andy</h3>
            <h2>User Table</h2>
            <tr>
                <th>ID</th>
                <th>User Name</th>
                <th>Email</th>
                <th>Role ID</th>
                <th>Company ID</th>
            </tr>
            foreach (DataRow dr in (dt.Rows))
            {
                //Need validation for null int column.
                id = (int)dr["id"];
                UserName = dr["user_name"].ToString();
                email = dr["email"].ToString();
                roleId = (int)dr["role_id"];
                if (dr["company_id"] == DBNull.Value)
                {
                    companyID = -1;
                }
                else { companyID = (int)dr["company_id"]; }

                //Users Table
                <tr>
                    <td>@id</td>
                    <td>@UserName</td>
                    <td>@email</td>
                    <td>@roleId</td>
                    <td>@companyID</td>
                    @*<button class="btn btn-success" @onclick="UserDelete">Delete</button>*@

                </tr>

            }
            //Add Users form
            @if (addButtonClicked)
            {
                <h1>Add User</h1>
                <label>User Name:</label>
                <input type="text" @bind="addedUserName">
                <br>
                <label>Role ID:</label>
                <select @bind=" roleIdAdded">
                    <option value="0">0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                </select>
                <br>
                <label>Email:</label>
                <input type="text" @bind="emailAdded">
                <br />
                <label>Company ID:</label>
                <input type="text" @bind="companyIdAdded">
                <br><br>
                <button class="btn btn-success" @onclick="UserAddedComplete">Add</button>
            }

        }
        else
        //for hiring managers
        {
            @if (addButtonClicked)
            {
                <h1>Add User</h1>
                <label>User Name:</label>
                <input type="text" @bind="addedUserName">
                <br>
                <label>Role ID:</label>
                <select @bind=" roleIdAdded">
                    <option value="0">0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                </select>
                <br>
                <label>Email:</label>
                <input type="text" @bind="emailAdded">

                <br><br>
                <button class="btn btn-success" @onclick="UserAddedComplete">Add</button>
            }
        }
        @*@if (showModal)
        {
            <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Are you sure you want to delete @companyToBeDeletedName</h5>
                            <button @onclick="UndoDelete" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-footer">
                            <button @onclick="UndoDelete" type="button" class="btn btn-secondary">Cancel</button>
                            <button @onclick="CompanyDeleted" type="button" class="btn btn-danger" data-dismiss="modal">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        }*@



    </EditForm>

</div>


@code {
    private AddUser user = new AddUser();
    private string errorMessage = "";
    private string UserName = "";
    private int companyID = 0;
    private int id = 0;
    private string firstName = "";
    private string lastName = "";
    private int roleId = 0;
    private string email = "";
    private DataTable dt;

    private string curUser = "";
    private int curCompany = 0;
    private bool isAndy = false;
    //default passord 
    private string passWord = "cpma";
    private bool addButtonClicked = false;
    private string addedUserName = "";
    //validate if the role id is not 0,1,2
    private int roleIdAdded = 999;
    private string emailAdded = "";
    private int companyIdAdded;
    private int active = 1;
    private int rowcount = 0;
    private int userTobeDeleted = 0;
    private string userTobeDeletedName = "";
    private bool showModal = false;
    private string successMsg = "";


    @*System.Diagnostics.Debug.Print(curUser);*@


protected override async Task OnInitializedAsync()
{

    curUser = await sessionStorage.GetItemAsync<string>("username");
    curCompany = await sessionStorage.GetItemAsync<int>("companyId");
    dt = Functions.GetDataTableFromSQL("SELECT [id],[user_name], [role_id], [company_id],[email] FROM [users]");



    IsAndy();

}

//Check if it is Andy logged in 
public void IsAndy()
{
    if (curUser == "andy")
    {
        isAndy = true;
    }
}
//check if the add user button is clicked
public void UserAddedButtonToggle()
{
    addButtonClicked = !addButtonClicked;
}
//Action for user insert button
public void UserAddedComplete()
{

    if (addedUserName.ToString() == "" || roleIdAdded == 999)
    {
        errorMessage = "Must fill in all the columns";
        return;
    }
    else
    {
        if (curUser != "andy")
        {
            companyIdAdded = curCompany;
        }


        Functions.GetDataTableFromSQL($"INSERT INTO users(user_name,role_id,password,email,company_id,active) VALUES('{addedUserName}',{roleIdAdded},'{passWord}','{emailAdded}',{companyIdAdded},{active})");
        addButtonClicked = false;
        //reset
        addedUserName = "";
        roleIdAdded = 999;
        emailAdded = "";
        companyIdAdded = 0;
        //reload page
        successMsg = "Successfull!";

        StateHasChanged();
    }

}
@*public void UserDelete()
{
    Functions.GetDataTableFromSQL($"DELETE FROM users WHERE id = '{userToBeDeleted}';");
}*@


}

