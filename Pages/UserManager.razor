@using Web_Onboard.Data
@using System.Data
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@page "/usermanager"
@attribute [Authorize(Roles = "Owner, Manager")]

    <h3>User Manager</h3>

<div style="width: 90%; padding: 5%; background-color: #fff; text-align: left;">
    <EditForm Model="@user">
        <DataAnnotationsValidator />
        @if (@errorMessage != "")
        {
            <div id="errorMessage" class="alert alert-danger">@errorMessage</div>
        }
        @if (isAndy)
        {
            <h3>Hi andy</h3>
            <h2>User Table</h2>
            <tr>
                <th>ID</th>
                <th>User Name</th>
                <th>Email</th>
                <th>Role ID</th>
            </tr>
            foreach (DataRow dr in (dt.Rows))
            {
                //Need validation for null int column.
                id = (int)dr["id"];
                UserName = dr["user_name"].ToString();
                email = dr["email"].ToString();
                roleId = (int)dr["role_id"];
                @*passWord = dr["password"].ToString();*@



                //Users Table
                <tr>
                    <td>@id</td>
                    <td>@UserName</td>
                    <td>@email</td>
                    <td>@roleId</td>

                </tr>




            }
            //Add Users form
            <h1>Add User</h1>
            <label for="@UserName">User Name:</label>
            <input type="text" id="@UserName" name="@UserName"><br><br>
            @*<label> for="@passWord":</label>
            <input type="text" id="@passWord" name="@passWord"><br><br>*@
            <input type="submit" value="Submit">

        }
        else
        //for hiring managers
        {
            <h2>Hi Managers</h2>
            <h1>Add User</h1>
            <label for="@UserName">User Name:</label>
            <input type="text" id="@UserName" name="@UserName"><br><br>
            @*<label> for="@passWord":</label>
            <input type="text" id="@passWord" name="@passWord"><br><br>*@
            <input type="submit" value="Submit">

        }

        <!--<label for="txtUN" class="label">User Name</label>
    <InputText ID="txtUN" placeholder="User Name" @bind-Value=user.username autocomplete="off" style="margin: 0; width: 100%; padding: 2px 0;" />
    <br />-->
        @*<label for="txtUN" class="label">Role ID</label>
        <InputText ID="txtRI" placeholder="Role ID" @bind-Value=user.role_id autocomplete="off" style="margin: 0; width: 100%; padding: 2px 0;" />
        <br />
        <div class="label">Password</div>
        <InputText ID="txtPass" placeholder="Password" @bind-Value=user.password autocomplete="off" style="margin: 0; width: 100%; padding: 2px 0;" />*@
        <!--<br />
    <table style="width: 100%;">
    </table>
    <br />
    <input type="submit" value="Add" class="btn btn-primary" style="margin: 0; width: 100%; padding: 12px 0; font-size: 18px;" />-->
        @*<label>@curUser</label>*@
    </EditForm>

</div>


@code {
    private AddUser user = new AddUser();
    private string errorMessage = "";
    private string UserName = "";
    private int companyID = 0;
    private int id = 0;
    private string firstName = "";
    private string lastName = "";
    private int roleId = 0;
    private string email = "";
    private DataTable dt;
    private string curUser = "";
    private int curCompany = 0;
    private bool isAndy = false;
    private string passWord = "";
 

    @*System.Diagnostics.Debug.Print(curUser);*@


protected override async Task OnInitializedAsync()
{

    curUser = await sessionStorage.GetItemAsync<string>("username");
    curCompany = await sessionStorage.GetItemAsync<int>("companyId");
    dt = Functions.GetDataTableFromSQL("SELECT [id],[user_name], [role_id], [company_id],[email] FROM [users]");
    IsAndy();

}


public void IsAndy()
{
    if (curUser == "andy")
    {
        isAndy = true;
    }
}
@*public void getCompanies()
{

    foreach (System.Data.DataRow dr in (dt.Rows))
    {
        Companies.Add((int)dr[2]);
    }
}*@

}
