@using Web_Onboard.Data
@using System.Data
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@page "/usermanager"
@attribute [Authorize(Roles = "Owner, Manager")]

<h3>User Manager</h3>
<button style="float: right; margin-left: auto;" class="btn btn-primary" @onclick="UserAddedButtonToggle">Add Users</button>

<div style="width: 90%; padding: 5%; background-color: #fff; text-align: left;">
    @if (errorMessage != "")
    {
        StateHasChanged();
        <div id="errorMessage" class="alert alert-danger">@errorMessage</div>
    }

    @if (successMessage != "")
    {
        <div id="successMessage" class="alert alert-success">@successMessage</div>
    }
    @if (addButtonClicked)
    {
        <EditForm Model="@user" Context="addUser">
            <DataAnnotationsValidator />
            <label>User Name:</label>
            <input type="text" @bind="user.username">
            <br>
            <label>Role ID:</label>
            <select @bind="user.role_id">
                @if (curRole == 0)
                {
                    <option value="0">CPMA Admin</option>
                }
                <option value="1">Hiring Manager</option>
                <option value="2">New Hire</option>
            </select>
            <br>
            <label>Email:</label>
            <input type="text" @bind="user.email">

            <br><br>
            <button class="btn btn-success" @onclick="UserAddedComplete">Add</button>
        </EditForm>
    }
    @if (curRole == 0)
    {
        <div style="align-content:center;text-align:center">
            <h4 style="display:inline"> Current Company: </h4>
            <select @onchange="CompanyChanged" style="display: inline-block; margin: auto;">
                <option value="-1"></option>
                @foreach (DataRow dr in companies_dt.Rows)
                {
                    if (curCompany == (int)dr[0])
                    {
                        <option value="@dr[0].ToString()" selected>@dr[1].ToString()</option>
                    }
                    else
                    {
                        <option value="@dr[0].ToString()">@dr[1].ToString()</option>
                    }
                }
            </select>
        </div>
    }
    @*{
        <h2>User Table</h2>
        <table>
            <tr>
                <th>User Name</th>
                <th>Email</th>
                <th>Role ID</th>
                <th>Company ID</th>
            </tr>
            <div class="main" style="display: flex; flex-direction: column;">
                @foreach (DataRow dr in (dt.Rows))
                {
                    int companyID = (dr["company_id"] == DBNull.Value) ? -1 : (int)dr["company_id"];
                    @if (curCompany == -1 || curCompany == companyID)
                    {
                        //Users Table
                        <tr>
                            <td>@(dr["user_name"].ToString())</td>
                            <td>@(dr["email"].ToString())</td>
                            <td>@((int)dr["role_id"])</td>
                            <td>@companyID</td>

                        </tr>
                    }
                }
        </table>
        }*@
    @if (curRole == 0 || curRole == 1)
    {
<div class="main" style="display: flex; flex-direction: column;">
    @foreach (DataRow dr in (dt.Rows))
    {
        int companyID = (dr["company_id"] == DBNull.Value) ? -1 : (int)dr["company_id"];
    <div style="display: flex; flex-direction:row; margin: 10px 0 10px 0; text-align: center">

        @if (curCompany == -1 || curCompany == companyID)
        {
            <span style="font-size: 200%; margin-left: 25px; margin-top: 15px; color: #667">@(dr["user_name"].ToString())</span>
            companies_dt_joined = Functions.GetDataTableFromSQL("SELECT [name] FROM [companies] WHERE [id] =" + companyID);
            @foreach (DataRow dr1 in (companies_dt_joined.Rows))
            {
                <span style="font-size: 200%; margin-left: 25px; margin-top: 15px; color: #667">@dr1["name"]</span>
            }
            <button style="height: 50px; width: 50px; border-radius: 50%; background-color: #667; margin: auto 10px auto auto;" @onclick="(e => UserClicked(dr))">
                <img src="Images/edit.png" style="height:25px; position: relative; width:25px" />
            </button>

        }


    </div>
        @if ((int)userSelected == (int)dr[0])
        {
            <div style="display: flex;">

                <div>
                    <div style="display: flex; flex-direction: column;">
                        <span>User Name</span>
                        <input style="width: 200px" @bind="user.username" type="text" id="compName" name="compName" />
                    </div>

                    <div style="margin-top: 15px; display: flex; flex-direction: column;">
                        <span style="margin-right: 20px">ID</span>
                        <input value=@dr[0] readonly style="width: 100px; opacity: 0.5" type="text" id="id" name="id" />
                    </div>
                 
                </div>
            </div>
            <div style="margin-top: 20px; margin-bottom: 30px">
                <button class="btn btn-success" >Edit User</button>
                <button style="margin-left: 20px" class="btn btn-danger">Delete User</button>
            </div>
        }

    }

</div>

    }



    @*@if (showModal)
        {
            <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Are you sure you want to delete @companyToBeDeletedName</h5>
                            <button @onclick="UndoDelete" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-footer">
                            <button @onclick="UndoDelete" type="button" class="btn btn-secondary">Cancel</button>
                            <button @onclick="CompanyDeleted" type="button" class="btn btn-danger" data-dismiss="modal">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        }*@
</div>


    @code{
        private AddUser user = new AddUser();
        private string errorMessage = "";
        private string successMessage = "";
        private DataTable dt;
        private DataTable companies_dt;
        private DataTable companies_dt_joined;

        private int curCompany = -1;
        private int curRole = -1;
        //default passord
        private string passWord = "cpma";
        private bool addButtonClicked = false;
        //validate if the role id is not 0,1,2
        private int rowcount = 0;
        private int userTobeDeleted = 0;
        private string userTobeDeletedName = "";
        private bool showModal = false;
        private int userSelected = 0;
        private int prevClicked = 0;
        private int companyIDclicked = 0;

        protected override async Task OnInitializedAsync()
        {
            int? tempComp = await sessionStorage.GetItemAsync<int>("companyId");
            if (tempComp.HasValue)
            {
                curCompany = tempComp.Value;
            }
            int? tempRole = await sessionStorage.GetItemAsync<int>("roleId");
            if (tempRole.HasValue)
            {
                curRole = tempRole.Value;
            }
            if (curRole == 0)
            {
                companies_dt = Functions.GetDataTableFromSQL("SELECT [id], [name] FROM [companies]");
                dt = Functions.GetDataTableFromSQL("SELECT [id], [user_name], [role_id], [company_id], [email] FROM [users]");

            }
            else
            {
                dt = Functions.GetDataTableFromSQL("SELECT [id], [user_name], [role_id], [company_id], [email] FROM [users] WHERE [company_id]=" + curCompany.ToString());
            }
        }

        //check if the add user button is clicked
        public void UserAddedButtonToggle()
        {
            addButtonClicked = !addButtonClicked;
        }
        //Action for user insert button
        public void UserAddedComplete()
        {

            if (String.IsNullOrWhiteSpace(user.username))
            {
                errorMessage = "Must have username";
            }
            else
            {
                Functions.GetDataTableFromSQL($"INSERT INTO users(user_name,role_id,password,email,company_id) VALUES('{user.username}',{user.role_id},'{passWord}','{user.email}',{curCompany})");
                addButtonClicked = false;
                //reload page
                successMessage = "Successfull!";

                StateHasChanged();
            }

        }
        public void UserClicked(System.Data.DataRow a)
        {
            //Determines if the user edit window is already open, if so it will close it
            if ((int)a[0] == prevClicked)
            {
                prevClicked = 0;
                userSelected = 0;
                return;
            }
            prevClicked = (int)a[0];
            userSelected = (int)a[0];
            companyIDclicked = (a["company_id"] == DBNull.Value) ? -1 : (int)a["company_id"];
            companies_dt_joined = Functions.GetDataTableFromSQL("SELECT [name] FROM [companies] WHERE [id] =" + companyIDclicked);
            StateHasChanged();


        }

        public async void CompanyChanged(ChangeEventArgs e)
        {
            curCompany = Int32.Parse(e.Value.ToString());
            ((CustomAuthenticationStateProvider)authenticationStateProvider).setCompanyId(curCompany);
            StateHasChanged();
        }
        /*public void UserDelete()
        {
            Functions.GetDataTableFromSQL($"DELETE FROM users WHERE id = '{userToBeDeleted}';");
        }*/
    }
