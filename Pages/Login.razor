@page "/login"
@layout LoginLayout
@using Web_Onboard.Data
@using System.Data
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h3>Login</h3>

<div id="frmMain" style="background-color: #eee; height: 100%; width: 100%;">
    <div style="width: 400px; height: 500px; margin: auto;">
        <h1 style="color: #555; font-weight: 100; letter-spacing: 4px; vertical-align: top;">
            <img src="Images/cp-ma-logo.png" style="height: 40px; margin-bottom: -10px;" alt="CP-MA" />
            Web-Onboard
        </h1>
        <div style="width: 90%; padding: 5%; background-color: #fff; text-align: left;">
            <EditForm Model="@user" OnValidSubmit="@ValidateUser">
                <DataAnnotationsValidator />
                <label for="txtUN" class="label">User Name</label>
                <InputText MinLength="50" ID="txtUN" placeholder="User Name" @bind-Value=user.username autocomplete="off" style="margin: 0; width: 100%; padding: 2px 0;" />
                <br />
                <div class="label">Password</div>
                <InputText ID="txtPass" placeholder="Password" @bind-Value=user.password autocomplete="off" style="margin: 0; width: 100%; padding: 2px 0;" />
                <br />
                <table style="width: 100%;">
                    <tr>
                        <td style="text-align: left;">
                            <InputCheckbox type="checkbox" id="addition" name="rememberMe" @bind-Value=user.remember />
                            Remember Me
                        </td>
                        <td style="text-align: right;">
                            <a href="?">Forgot password?</a>
                        </td>
                    </tr>
                </table>
                <br />
                <input type="submit" value="Login" class="btn btn-primary" style="margin: 0; width: 100%; padding: 12px 0; font-size: 18px;" />
            </EditForm>
        </div>
    </div>
</div>

@code {
    private User user = new User();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/dashboard");
        }
    }

    protected async Task<bool> ValidateUser()
    {
        DataTable dt = Functions.GetDataTableFromSQL("SELECT [role_id] FROM [users] WHERE [user_name] = '" + user.username + "' AND [password] = '" + user.password + "'");

        if (dt.Rows.Count > 0)
        {
            int roleId = (int)(dt.Rows[0][0]);
            ((CustomAuthenticationStateProvider)authenticationStateProvider).MarkUserAsAuthenticated(user.username, roleId);

            navigationManager.NavigateTo("/dashboard");

            await sessionStorage.SetItemAsync("username", user.username);
            await sessionStorage.SetItemAsync("role", roleId);

            //System.Diagnostics.Debug.Print((dt.Rows[0][0]).ToString());
        }
        else
        {
            //lblResults.Text = "<img src='/Media/Images/error.png' /> User information invalid. " + DateTime.Now.ToLocalTime().ToString("h:mm:ss tt");
            //lblResults.CssClass = "result-box error-box";
            //lblResults.Visible = true;
        }
        return await Task.FromResult(true);
    }
}
